#!/usr/bin/env sh
#
# Author: Pooya Moradi
# Date : 1401-01-22
# License: MIT
#
# Description: A simple script to fetch Iranian and international calendar
#              events
#
# Dependencies: jq curl date jdate

# TODO
# - convert date above and prepend the result to it
# - find a better database

show_help() {
    cat << EOF
cal-events: shows Iranian/international calendar events for current day

Usage: cal-events [OPTIONS]
Options:
    -s      Sync database json by downloading files from internet
    -V      Print script version
    -h      Display the help message

Examples:
    # sync before first use
    cal-events -s
    # get events for current day
    cal-events
EOF
}

log() {
    _mode=""
    case "$1" in
        "error")
            _mode="error"
            ;;
        "warn")
            _mode="warn"
            ;;
        "info")
            _mode="info"
            ;;
        "debug")
            _mode="debug"
            ;;
    esac
    printf >&2 "[%-5s] %s\n" "$_mode" "$2"
}

check_deps() {
    _app=""
    _err=0
    for _app in "$@"; do
        if ! command -v "$_app" > /dev/null 2>&1; then
            log error "dependency $_app not found"
            _err=1
        fi
    done
    [ $_err -eq 1 ] && exit "$_err"
}

fetch() {
    _url="$1"
    _file="$2"
    if ! curl -# --fail --location "$_url" --output "$_file"; then
        return 1
    fi
}

sync() {
    log info "Syncing database to $data_dir"
    mkdir --parents "$data_dir"

    if ! fetch "$jalali_link" "$jalali"; then
        log error "Problem in downloading $jalali_link"
        return 1
    fi

    if ! fetch "$gregorian_link" "$gregorian"; then
        log error "Problem in downloading $gregorian_link"
        return 1
    fi
    _db_files=$(printf '%s\n' "$data_dir/"*)
    log info "Downloaded files: $_db_files"
    log info "Done syncing"
}

# global variables
version=0.2
data_dir="${XDG_DATA_HOME:-$HOME/.local/share}/cal-events"
jalali="$data_dir/jalali.json"
gregorian="$data_dir/gregorian.json"
db_link_base="https://github.com/persiancal/cal-events/raw/refs/heads/gh-pages"
jalali_link="$db_link_base/jalali.json"
gregorian_link="$db_link_base/gregorian.json"

while getopts sVh opt; do
    case $opt in
        h)
            show_help
            ;;
        s)
            sync
            exit "$?"
            ;;
        V)
            printf "%s\n" "$version"
            ;;
        *)
            log error "Bad usage! Check help (-h)"
            exit 2
            ;;

    esac
done
shift "$((OPTIND - 1))"
if [ -n "$1" ]; then
    log error "Bad usage! cal-events takes no arguments. Check help (-h)"
    exit 2
fi

check_deps jq curl jdate date

# check if db json files exist
if [ ! -f "$jalali" ] || [ ! -f "$gregorian" ]; then
    log error "Database not found. Sync first (-s)"
    exit 1
fi

read -r month day << END
$(jdate '+%m %d')
END
if ! jq --raw-output --argjson m "$month" --argjson d "$day" \
    '.events | map (select(.month == $m and .day == $d)) [] | .title.fa_IR' \
    "$jalali"; then
    log error "Filtering $jalali failed"
    exit 1
fi

read -r month day << END
$(date '+%m %d')
END
if ! jq --raw-output --argjson m "$month" --argjson d "$day" \
    '.events | map (select(.month == $m and .day == $d)) [] | .title.fa_IR' \
    "$gregorian"; then
    log error "Filtering $gregorian failed"
    exit 1
fi
